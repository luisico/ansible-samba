---
# Install role: server or client or member
samba_role: client

# Samba workgroup
samba_workgroup: SAMBA

# Kerberos realm
# Only used when 'samba_role: member' is set.
# Is used in smb.conf + krb5.conf
samba_realm: SAMBA.EXAMPLE.COM

# Share homes
samba_share_homes: true

# Share printers (only cups is supported)
samba_share_printers: true

# Global options
samba_global:
  security: user
  passdb backend: tdbsam

# Global options for domain member server
# 'workgroup' is always set via role variable 'samba_workgroup',
# If 'samba_role: member' is set, 'realm' is set via role variable 'samba_realm',
# and 'security = ADS' will also be set.
# Do not set these variable as global options.
#
# samba_global:
#   "idmap config * : range": 10000 - 19999
#   "idmap config SAMBA : backend": rid
#   "idmap config SAMBA : range": 1000000 - 1999999
#   vfs objects: acl_xattr
#   map acl inherit: yes
#   log level: 3
#   allow insecure wide links: yes
#
# Global options for domain controller
# If 'samba_role: dc' is set 'realm' + 'server role' will be set automatically. (not implemented yet)
# samba_global:
#   dns forwarder: 192.168.100.1
#   log level: 3

# Additional shares
# This is a dictionary of shares, where the key is the share name, and the value
# is a dictionary of valid smb options. Remember to quote option keys containing
# reserved characteres in YAML and values with special meaning in ansible, ie yes, no, true, false. Example:
# samba_shares:
#   myshare:
#     comment: My Shares
#     valid users: user
#     read only: 'no'
#     'idmap config * : range': 1000-2000
samba_shares: {}

# Samba users
# List of samba users and their samba password. Note that users need to be
# defined in the system itself, vi /etc/passwd, LDAP, ... Example:
# - user: username
# - password: goodpasswod
samba_users: []
